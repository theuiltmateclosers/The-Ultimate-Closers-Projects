name: Preview

on:
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'pnpm' }
      - run: pnpm install --frozen-lockfile
      - run: pnpm -C apps/web build
      - run: pnpm -C apps/api build
      - run: pnpm -C apps/web test --if-present
      - run: pnpm -C apps/api test --if-present

  deploy-web-vercel:
    if: ${{ github.event_name == 'pull_request' && vars.VERCEL_PROJECT_ID != '' }}
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - run: pnpm install --frozen-lockfile
      - name: Vercel Deploy (Preview)
        run: |
          npm i -g vercel@latest
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > url.txt
          echo "PREVIEW_URL=$(cat url.txt)" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  api-image-ghcr:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v5
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build API image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/tuc-api:${{ github.event.pull_request.number }} -f apps/api/Dockerfile .
      - name: Push API image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/tuc-api:${{ github.event.pull_request.number }}

